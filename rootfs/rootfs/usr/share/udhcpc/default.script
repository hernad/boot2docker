#!/bin/sh
. /etc/green_common

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

DHCP_LOG=$BOOT_DIR/log/udhcp.log
RESOLV_CONF="/etc/resolv.conf"

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"


echo "command: $1 ==========  $(date) ========"  >> $DHCP_LOG

#rootfs/usr/share/udhcpc/default.script
# $router, $dns

if [ -f /opt/apps/green/bin/coredns ]; then
	# https://miek.nl/2016/April/20/caching-in-coredns/
	echo ".:53 {"  > /etc/Corefile
	for i in $dns ; do
		echo "  proxy . ${i}:53" >> /etc/Corefile
		echo "$(date) adding dns ${i} to Corefile" >> $DHCP_LOG
	done
  #echo "  cache 10 bring.out.ba" >> /etc/Corefile # cache only bring.out.ba
  echo "  log $BOOT_DIR/log/coredns.log" >> /etc/Corefile
  echo "  errors $BOOT_DIR/log/coredns.log" >> /etc/Corefile
  echo "}" >> /etc/Corefile
	dns="127.0.0.1" # redirecto to localhost dns server
  LOCAL_DNS=1
else
	log_msg "no coredns in $PATH"
fi

case "$1" in
	deconfig)
		/sbin/ifconfig $interface 0.0.0.0
		;;

	renew|bound)
		/sbin/ifconfig $interface $ip $BROADCAST $NETMASK
		echo "$(date) ifconfig $interface $ip $BROADCAST $NETMASK" >> $DHCP_LOG

		if [ -n "$router" ] ; then
			echo "$(date) deleting routers" >> $DHCP_LOG
			echo "deleting routers"
			while route del default gw 0.0.0.0 dev $interface ; do
				:
			done

			metric=0
			for i in $router ; do
				echo "$(date) route add default gw $i dev $interface metric $((metric++))" >> $DHCP_LOG
				route add default gw $i dev $interface metric $((metric++))
			done

			# avoid resetting the resolv.conf for any additional netdevs,
			#  as the first is the one the Docker daemon will use to pull images
			if [ -n "$dns" ] ; then
				echo "$(date) reset $RESOLV_CONF" >> $DHCP_LOG
				echo -n > $RESOLV_CONF
			fi
			if [ -n "$domain" ] ; then
				echo "$(date) search $domain" >> $DHCP_LOG
				echo search $domain >> $RESOLV_CONF
			fi
		fi

		for i in $dns ; do
				echo "$(date) adding dns $i" >> $DHCP_LOG
				echo adding dns $i
				echo nameserver $i >> $RESOLV_CONF
			done
			;;
	esac

[ -n "$LOCAL_DNS" ] && /etc/rc.d/dns
exit 0
