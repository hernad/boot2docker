#!/bin/bash

. /etc/green_common
. /etc/init.d/tc-functions

[ `whoami` != root ] && echo "you have to be root user !" && exit 1

case "$1" in
  2) echo "install GREEN_APPS_2"
     INSTALL_SET="2"
     IND1="[ ]${RED}"
     IND2="[*]${GREN}"
     IND3="[ ]${RED}"
     ;;
  2) echo "install GREEN_APPS_3"
     INSTALL_SET="3"
     IND1="[ ]${RED}"
     IND2="[ ]${RED}"
     IND3="[*]${GREN}"
     ;;
  *) echo "install GREEN_APPS"
     INSTALL_SET="1"
     IND1="[*]${GREEN}"
     IND2="[ ]${RED}"
     IND3="[ ]${RED}"
     ;;
esac

GREEN_BINTRAY=${GREEN_BINTRAY:-https://dl.bintray.com/hernad/greenbox}


if [ -z "$GREEN_APPS" ] ; then
  GREEN_APPS="docker_$DOCKER_VERSION green_$GREEN_APPS_VER x11_$X11_APPS_VER"
  GREEN_APPS+=" python2_$PYTHON2_VER vim_$VIM_VER ruby_$RUBY_VER"
fi

if [ -z "$GREEN_APPS_2" ] ; then
  GREEN_APPS_2="VirtualBox_$VBOX_VER vagrant_$VAGRANT_VER perl_$PERL_VER go_${GO_VER} node_${NODE_VER}"
fi

if [ -z "$GREEN_APPS_3" ] ; then
  GREEN_APPS_3="aws_${AWS_VER} java_${JAVA_VER}"
  GREEN_APPS_3+=" idea_${IDEA_VER} atom_${ATOM_VER} code_${CODE_VER}"
fi


echo "environment vars:"
echo "-------------------------------------------------------------"
echo "GREEN_BINTRAY: $GREEN_BINTRAY"
echo "${IND1}   GREEN_APPS: ${GREEN_APPS}${NORMAL}"
echo "${IND2} GREEN_APPS_2: ${GREEN_APPS_2}${NORMAL}"
echo "${IND3} GREEN_APPS_3: ${GREEN_APPS_3}${NORMAL}"

echo ===== download_green_apps start: $(date) ====== >> $LOG_FILE

[ "$INSTALL_SET" == "2" ] && GREEN_APPS="${GREEN_APPS_2}"  # install GREEN_APPS_2
[ "$INSTALL_SET" == "3" ] && GREEN_APPS="${GREEN_APPS_3}"  # install GREEN_APPS_2

if [ ! -d /opt/apps ] ; then
  log_msg "/opt/apps doesn't exists"
  exit 1
fi


download_app() {

  app=$1
  ver=$2

  APPS_HOME=/opt/apps
  cd $APPS_HOME

  ext="xz"
  # ext="gz"

  [ -f /opt/apps/${app}_${ver}.tar.${ext} ] && echo "download in progres STOP!" && return

   LOCAL_MEDIA=/media/GREEN_INIT/apps/${app}_${ver}.tar.${ext}
   if [ -f $LOCAL_MEDIA ] ; then
      log_msg "getting from /media/GREEN_INIT/apps/${app}_${ver}.tar.${ext} ..."
      cp $LOCAL_MEDIA $APPS_HOME/
   else
      echo "downloading: $GREEN_BINTRAY/${app}_${ver}.tar.${ext} ..."
      log_msg "START: curl $GREEN_BINTRAY/${app}_${ver}.tar.${ext}"
      cd $APPS_HOME
      curl -LO $GREEN_BINTRAY/${app}_${ver}.tar.${ext}
   fi

   if [ $? -ne 0 ] ; then
        log_msg "ERROR: curl $GREEN_BINTRAY/${app}_${ver}.tar.${ext}"
   else
        umount_opt ${app}
        cd $APPS_HOME
	      if tar xf ${app}_${ver}.tar.${ext} 2>&1 | tee -a $LOG_FILE ; then
              log_msg "SUCCESS: curl $GREEN_BINTRAY/${app}_${ver}.tar.${ext}"
              rm ${app}_${ver}.tar.${ext}
              chown -R root:root ${app}
              echo ${ver} > /opt/apps/${app}/VERSION
              log_msg "mount_bind_opt_apps ${app}"
              mount_bind_opt_apps ${app}
              [ "$app" == "VirtualBox" ] && vbox_fix_permissions
              [ "$app" == "docker" ] && echo ${ver} > $BOOT_DIR/etc/sysconfig/docker # set docker version
        else
              log_msg "ERROR: curl=> $GREEN_BINTRAY/${app}_${ver}.tar.${ext}, error tar tf $APPS_HOME/${app}_${ver}.tar.${ext} (PATH: $PATH, LD_LIBRARY_PATH: $LD_LIBRARY_PATH)"
        fi
   fi


}


for appver in $GREEN_APPS; do

   # e.g. VirtualBox_5.0.10
   app=$( echo $appver | cut -d"_" -f1 )
   ver=$( echo $appver | cut -d"_" -f2 )

   if $(grep -q \/opt\/apps /proc/mounts) && [ ! -d /opt/apps/${app} ] ; then
         download_app ${app} ${ver} &
   fi

   if [ -d /opt/apps/${app} ] ; then

       installed_ver=`cat /opt/apps/${app}/VERSION`

       if [ "$installed_ver" != "${ver}" ] ; then
           log_msg "${app} installed version is ${installed_ver}, going to download and  install ${ver} !"
           download_app ${app} ${ver} &
       fi


   fi
done
